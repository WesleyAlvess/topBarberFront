import api from "../services/api";
import AsyncStorage from "@react-native-async-storage/async-storage";

// Defini√ß√£o do tipo para o perfil do usu√°rio
interface UserProfile {
  _id: string;
  nome: string;
  email: string;
  foto: string;
  status: string;
  telefone: string;
  tipo: string;
  dataCadastro: string;
}

// Fun√ß√£o para obter o perfil do usu√°rio autenticado
export const getPerfil = async (): Promise<UserProfile | null> => {
  try {
    // üîπ Recupera o token salvo localmente
    let token = await AsyncStorage.getItem("userToken");

    if (!token) {
      console.warn("‚ö†Ô∏è Token n√£o encontrado, usu√°rio n√£o autenticado.");
      return null;
    }

    // üîπ Requisi√ß√£o para obter os dados do perfil
    const response = await api.get<UserProfile>("/api/user/perfil", {
      headers: { Authorization: `Bearer ${token}` },
    });

    if (response.status === 200) {
      const perfilAtual = response.data;

      // üîπ Atualiza o AsyncStorage com o perfil atual
      await AsyncStorage.setItem("userProfile", JSON.stringify(perfilAtual));

      return perfilAtual;
    }

    console.error("‚ùå Erro ao obter dados do perfil:", response.status);
    return null;
  } catch (error: any) {
    if (error.response?.status === 401) {
      console.warn("‚ö†Ô∏è Token inv√°lido ou expirado! Tentando atualizar...");

      // üîÑ Tentativa de renovar o token
      const novoToken = await refreshToken();
      if (novoToken) {
        console.log("‚úÖ Novo token obtido:", novoToken);
        await AsyncStorage.setItem("userToken", novoToken);
        return getPerfil(); // üîÑ Tenta novamente com o novo token
      } else {
        console.error("‚ùå N√£o foi poss√≠vel renovar o token.");
      }
    }

    console.error("‚ùå Erro ao obter dados do perfil:", error);
    return null;
  }
};


